@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .w-1em {
    width: 1em;
  }
  .h-1em {
    height: 1em;
  }
}

@keyframes sparkle-pop {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: scale(1.2) rotate(180deg);
    opacity: 1;
  }
  100% {
    transform: scale(0) rotate(360deg);
    opacity: 0;
  }
}

@keyframes rebel-glitch {
  0%, 100% {
    transform: translate(0);
  }
  20% {
    transform: translate(-1px, 1px);
  }
  40% {
    transform: translate(1px, -1px);
  }
  60% {
    transform: translate(-1px, -1px);
  }
  80% {
    transform: translate(1px, 1px);
  }
}

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=IBM+Plex+Mono:wght@300;400;500&display=swap');

* {
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.note-content, textarea, input[type="text"], .monospace {
  font-family: 'IBM Plex Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace !important;
  font-weight: 400;
  letter-spacing: 0.025em;
}

.dark {
  color-scheme: dark;
}

@layer utilities {
  .transition-theme {
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
  }
  .dynamic-text-base {
    font-size: var(--base-font-size, 16px) !important;
  }
  .dynamic-text-sm {
    font-size: calc(var(--base-font-size, 16px) * 0.875) !important;
  }
  .dynamic-text-xs {
    font-size: calc(var(--base-font-size, 16px) * 0.75) !important;
  }
  .dynamic-text-lg {
    font-size: calc(var(--base-font-size, 16px) * 1.125) !important;
  }
  .dynamic-text-xl {
    font-size: calc(var(--base-font-size, 16px) * 1.25) !important;
  }
  
  .animate-fade-in {
    animation: fadeIn 0.3s ease-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px) translateX(-50%);
    }
    to {
      opacity: 1;
      transform: translateY(0) translateX(-50%);
    }
  }

}